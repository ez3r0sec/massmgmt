#!/bin/sh
# adobeReader (UNIX. Exec.)
# Script to download and install Adobe Reader DC
# modified from: https://www.jamf.com/jamf-nation/third-party-products/files/761/
# adobe-reader-installer-updater
# Last Edited: 10/30/18

### VARIABLES
source /usr/local/massmgmt/lib/massmgmtlib.sh
scriptEnabled="$(cat $configFile | awk '/AdobeReader/ {print $2}')"

### FUNCTIONS
function check_enabled {
	if [ "$scriptEnabled" == "Enable" ] ; then
		echo "$logStart adobeReader is enabled, comparing versions" >> "$logFile"
		update_reader
	else
		echo "$logStart adobeReader is not enabled" >> "$logFile"
	fi
}

function update_reader {
	## Get OS version and adjust for use with the URL string
	OSvers_URL=$( sw_vers -productVersion | sed 's/[.]/_/g' )
	## Set the User Agent string for use with curl
	userAgent="Mozilla/5.0 (Macintosh; Intel Mac OS X ${OSvers_URL}) AppleWebKit/535.6.2 (KHTML, like Gecko) Version/5.2 Safari/535.6.2"
	# Get the latest version of Reader available from Adobe's About Reader page.
	latestver="$()"
	while [ -z "$latestver" ]
	do
		latestver="$(curl -s -L -A "$userAgent" https://get.adobe.com/reader/ | grep "<strong>Version" | sed -e 's/<[^>][^>]*>//g' | awk '{print $2}')"
	done
	echo "$logStart Latest Version is: $latestver" >> "$logFile"
	latestvernorm="$(echo ${latestver} | sed -e 's/20//')"
	# Get the version number of the currently-installed Adobe Reader, if any.
	if [ -e "/Applications/Adobe Acrobat Reader DC.app" ]; then
		currentinstalledver="$(defaults read /Applications/Adobe\ Acrobat\ Reader\ DC.app/Contents/Info CFBundleShortVersionString)"
		echo "$logStart Current installed version is: $currentinstalledver" >> "$logFile"
		if [ ${latestvernorm} = ${currentinstalledver} ]; then
			echo "$logStart Adobe Reader DC is current. Exiting" >> "$logFile"
			exit
		fi
	else
		currentinstalledver="none"
		echo "$logStart Adobe Reader DC is not installed" >> "$logFile"
	fi
	ARCurrVersNormalized=$( echo $latestver | sed -e 's/[.]//g' -e 's/20//' )
	url=""
	url1="http://ardownload.adobe.com/pub/adobe/reader/mac/AcrobatDC/${ARCurrVersNormalized}/AcroRdrDC_${ARCurrVersNormalized}_MUI.dmg"
	url2=""
	#Build URL
	url="$(echo "${url1}${url2}")"
	# Compare the two versions, if they are different or Adobe Reader is not present then download and install the new version.
	if [ "${currentinstalledver}" != "${latestvernorm}" ]; then
		curl -s -o /tmp/reader.dmg ${url} >> "$logFile" 2>&1
		hdiutil attach /tmp/reader.dmg -nobrowse -quiet >> "$logFile" 2>&1
		installer -pkg /Volumes/AcroRdrDC_${ARCurrVersNormalized}_MUI/AcroRdrDC_${ARCurrVersNormalized}_MUI.pkg -target / >> "$logFile" 2>&1
		sleep 10
		hdiutil detach $(df | grep Adobe\ Acrobat\ Reader\ DC\ Installer | awk '{print $1}') -quiet >> "$logFile" 2>&1
		sleep 10
		rm /tmp/reader.dmg >> "$logFile" 2>&1
		#double check to see if the new version got updated
		newlyinstalledver="$(defaults read /Applications/Adobe\ Acrobat\ Reader\ DC.app/Contents/Info CFBundleShortVersionString)"
  		if [ "${latestvernorm}" = "${newlyinstalledver}" ] ; then
			echo "$logStart Adobe Reader is updated/installed" >> "$logFile"
		else
    		echo "$logStart ERROR: Adobe Reader update unsuccessful." >> "$logFile"
			exit
		fi
	else
		echo "$logStart Adobe Reader is already up to date." >> "$logFile"
	fi
}

### SCRIPT
check_enabled
exit
